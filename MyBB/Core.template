{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation.",

  "Parameters" : {
	
	"AvailabilityZoneA" : { 
      "Description" : "Availability Zone to use, eg us-west-2a",
      "Type" : "String",
      "Default" : "us-west-2a"
    },
	
	"AvailabilityZoneB" : { 
      "Description" : "Availability Zone to use, eg us-west-2b",
      "Type" : "String",
      "Default" : "us-west-2b"
    },
	
	"VPCCIDR" : { 
      "Description" : "VPC CIDR, eg. 10.0.0.0/16",
      "Type" : "String",
      "Default" : "10.0.0.0/16"
    },
	
	"WebSubnetA" : {
      "Description" : "Public CIDR in AZ A, eg. 10.0.8.0/24",
      "Type" : "String",
      "Default" : "10.0.8.0/24"
    },
	
    "WebSubnetB" : {
      "Description" : "Public CIDR in AZ B, eg. 10.0.16.0/24",
      "Type" : "String",
      "Default" : "10.0.16.0/24"
    },
	
    "DBSubnetA" : {
      "Description" : "RDS CIDR in AZ A, eg. 10.0.32.0/24",
      "Type" : "String",
      "Default" : "10.0.32.0/24"
    },
	
    "DBSubnetB" : {
      "Description" : "RDS CIDR in AZ B, eg. 10.0.40.0/24",
      "Type" : "String",
      "Default" : "10.0.40.0/24"
    }
  },
  
  
  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Ref" : "VPCCIDR" },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "SubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
	    "AvailabilityZone" : { "Ref" : "AvailabilityZoneA"},
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "WebSubnetA" },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
	
	  "SubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
	    "AvailabilityZone" : { "Ref" : "AvailabilityZoneB"},
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "WebSubnetB" },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

	  "RDSSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
	    "AvailabilityZone" : { "Ref" : "AvailabilityZoneA"},
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "DBSubnetA" },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
	
	  "RDSSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
	    "AvailabilityZone" : { "Ref" : "AvailabilityZoneB"},
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "DBSubnetB" },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "RouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
	
	"RouteTableRDS" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
	
	  "SubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetA" },
        "RouteTableId" : { "Ref" : "RouteTable" }
      }
    },
	
    "SubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetB" },
        "RouteTableId" : { "Ref" : "RouteTable" }
      }
    },
	  "RDSSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "RDSSubnetA" },
        "RouteTableId" : { "Ref" : "RouteTableRDS" }
      }
    },
	
    "RDSSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "RDSSubnetB" },
        "RouteTableId" : { "Ref" : "RouteTableRDS" }
      }
    },

    "NetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "InboundHTTPNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"}
      }
    },

    "InboundSSHNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "22", "To" : "22"}
      }
    },

    "InboundResponsePortsNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "102",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1024", "To" : "65535"}
      }
    },

    "OutBoundHTTPNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"}
      }
    },

    "OutBoundHTTPSNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "443", "To" : "443"}
      }
    },

    "OutBoundResponsePortsNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "102",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1024", "To" : "65535"}
      }
    },

    "SubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetA" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
	
    "SubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetB" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    }
  },

  "Outputs" : {
    "VPC" : {
      "Description" : "VPCId of the newly created VPC",
      "Value" :  { "Ref" : "VPC" }
    },
    "SubnetA" : {
      "Description" : "Private Subnet ID",
      "Value" :  { "Ref" : "SubnetA" }
    },
    "SubnetB" : {
      "Description" : "Private Subnet ID",
      "Value" :  { "Ref" : "SubnetB" }
    },
    "RDSSubnetA" : {
      "Description" : "RDS Subnet ID",
      "Value" :  { "Ref" : "RDSSubnetA" }
    },
    "RDSSubnetB" : {
      "Description" : "RDS Subnet ID",
       "Value" :  { "Ref" : "RDSSubnetB" }
    }
  }
}