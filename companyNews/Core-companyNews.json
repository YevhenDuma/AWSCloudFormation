{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation template.",

  "Parameters" : {
    "VPCCIDR" : { 
      "Description" : "VPC CIDR",
      "Type" : "String"
    },
    "VPCTag" : { 
      "Description" : "VPC Tag",
      "Type" : "String"
    },
    "AvailabilityZoneA" : { 
      "Description" : "Availability Zone to use",
      "Type" : "String"
    },
    "AvailabilityZoneB" : { 
      "Description" : "Availability Zone to use",
      "Type" : "String"
    },
    "AvailabilityZoneC" : { 
      "Description" : "Availability Zone to use",
      "Type" : "String"
    },	
    "EC2PublicSubnetACIDR" : {
      "Description" : "Public CIDR in AZ A",
      "Type" : "String"
    },
    "EC2PublicSubnetBCIDR" : {
      "Description" : "Public CIDR in AZ B",
      "Type" : "String"
    },
    "EC2PublicSubnetCCIDR" : {
      "Description" : "Public CIDR in AZ C",
      "Type" : "String"
    },
    "EC2PrivateSubnetACIDR" : {
      "Description" : "RDS CIDR in AZ A",
      "Type" : "String"
    },
    "EC2PrivateSubnetBCIDR" : {
      "Description" : "RDS CIDR in AZ B",
      "Type" : "String"
    },
    "EC2PrivateSubnetCCIDR" : {
      "Description" : "RDS CIDR in AZ C",
      "Type" : "String"
    },
    "EnableDnsSupport" : {
      "Description" : "Specifies whether DNS resolution is supported for the VPC. If this attribute is true, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not. By default the value is set to true.",
      "Type" : "String"
    },
    "EnableDnsHostnames" : {
      "Description" : "pecifies whether the instances launched in the VPC get DNS hostnames. If this attribute is true, instances in the VPC get DNS hostnames; otherwise, they do not. You can only set EnableDnsHostnames to true if you also set the EnableDnsSupport attribute to true. By default, the value is set to false.",
      "Type" : "String"
    }
  },
  
  "Resources" : {
    "VPC" : {
         "Type" : "AWS::EC2::VPC",
         "Properties" : {
         "EnableDnsSupport" : { "Ref" : "EnableDnsSupport"},
         "EnableDnsHostnames" : { "Ref" : "EnableDnsHostnames"},
          "CidrBlock" : { "Ref" : "VPCCIDR"} ,
            "InstanceTenancy" : "default",
            "Tags" : [ {"Key" : "Name", "Value" : { "Ref" : "VPCTag" } } ]
         }
      },

    "EC2PublicSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
	    "AvailabilityZone" : { "Ref" : "AvailabilityZoneA"},
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "EC2PublicSubnetACIDR" },
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "VPCTag"}, "EC2PublicSubnetA" ] ] } } ]
      }
    },
	
	  "EC2PublicSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
	    "AvailabilityZone" : { "Ref" : "AvailabilityZoneB"},
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "EC2PublicSubnetBCIDR" },
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "VPCTag"}, "EC2PublicSubnetB" ] ] } } ]
      }
    },

    "EC2PublicSubnetC" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
      "AvailabilityZone" : { "Ref" : "AvailabilityZoneC"},
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "EC2PublicSubnetCCIDR" },
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "VPCTag"}, "EC2PublicSubnetC" ] ] } } ]
      }
    },

	  "EC2PrivateSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
	    "AvailabilityZone" : { "Ref" : "AvailabilityZoneA"},
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "EC2PrivateSubnetACIDR" },
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "VPCTag"}, "EC2PrivateSubnetA" ] ] } } ]
      }
    },
	
	  "EC2PrivateSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
	    "AvailabilityZone" : { "Ref" : "AvailabilityZoneB"},
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "EC2PrivateSubnetBCIDR" },
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "VPCTag"}, "EC2PrivateSubnetB" ] ] } } ]
      }
    },

    "EC2PrivateSubnetC" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
      "AvailabilityZone" : { "Ref" : "AvailabilityZoneC"},
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "EC2PrivateSubnetCCIDR" },
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "VPCTag"}, "EC2PrivateSubnetC" ] ] } } ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "NATSubnetA" : {
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["EIPPublicSubnetA", "AllocationId"]},
        "SubnetId" : { "Ref" : "EC2PublicSubnetA"}
      }
    },

    "EIPPublicSubnetA" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : [ "-", [  { "Ref" : "AWS::StackId" }, "PublicRouteTable" ] ] } } ]
      }
    },
	
	 "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : [ "-", [  { "Ref" : "AWS::StackId"}, "PrivateRouteTable" ] ] } } ]
      }
    },

    "RouteInternet" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "RouteNATSubnetA" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "NATSubnetA",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NATSubnetA" }
      }
    },
	
	  "PublicSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "EC2PublicSubnetA" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
	
    "PublicSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "EC2PublicSubnetB" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    "PublicSubnetCRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "EC2PublicSubnetC" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
	  "PrivateSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "EC2PrivateSubnetA" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },
    "PrivateSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "EC2PrivateSubnetB" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },
    "PrivateSubnetCRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "EC2PrivateSubnetC" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "NetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Name", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "InboundNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0"
      }
    },
    "OutBoundNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0"
      }
    },
    "PublicSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "EC2PublicSubnetA" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
  
    "PublicSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "EC2PublicSubnetB" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },

    "PublicSubnetCNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "EC2PublicSubnetC" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
    "PrivateSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "EC2PrivateSubnetA" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
  
    "PrivateSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "EC2PrivateSubnetB" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },

    "PrivateSubnetCNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "EC2PrivateSubnetC" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    }
  }, 

  "Outputs" : {
    "EC2PublicSubnetA" : {
      "Description" : "Public Subnet ID in AZ A",
      "Value" :  { "Ref" : "EC2PublicSubnetA" }
    },
    "EC2PublicSubnetB" : {
      "Description" : "Public Subnet ID in AZ B",
      "Value" :  { "Ref" : "EC2PublicSubnetB" }
    },
    "EC2PublicSubnetC" : {
      "Description" : "Public Subnet ID in AZ C",
      "Value" :  { "Ref" : "EC2PublicSubnetC" }
    },
    "EC2PrivateSubnetA" : {
      "Description" : "Private Subnet ID in AZ A",
      "Value" :  { "Ref" : "EC2PrivateSubnetA" }
    },
    "EC2PrivateSubnetB" : {
      "Description" : "Private Subnet ID in AZ B",
       "Value" :  { "Ref" : "EC2PrivateSubnetB" }
    },
    "EC2PrivateSubnetC" : {
      "Description" : "Private Subnet ID in AZ C",
       "Value" :  { "Ref" : "EC2PrivateSubnetC" }
    },
    "VPC" : {
      "Description" : "VPC Id",
       "Value" :  { "Ref" : "VPC" }
    }
  }
}